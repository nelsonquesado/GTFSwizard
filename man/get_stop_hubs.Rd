% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_stop_hubs.R
\name{get_stop_hubs}
\alias{get_stop_hubs}
\title{Identify and Extract Stop Hubs Based on Transfers and Routes}
\usage{
get_stop_hubs(gtfs, walk_distance = 100, hour, service = higher_servicepattern)
}
\arguments{
\item{gtfs}{A GTFS object, preferably of class `wizardgtfs`. If not, the function will attempt to convert it using `GTFSwizard::as_wizardgtfs()`.}

\item{walk_distance}{A numeric value specifying the walking distance (in meters) used to group stops into hubs. Defaults to `100`.}

\item{hour}{A numeric value or the string `"all"`, indicating the hour(s) of the day (0-24) for which to analyze transfers. Must be either a number in the range `0:24` or `"all"`. This parameter is required.}

\item{service}{A vector of service pattern identifiers. Defaults to the result of `higher_servicepattern()`.}
}
\value{
A `wzd_hubs` object (a specialized tibble) with the following columns:
\describe{
  \item{stop_id}{The ID of the stop identified as a hub.}
  \item{n_routes}{The number of unique routes passing through the hub.}
  \item{n_trips}{The number of unique trips passing through the hub.}
}
}
\description{
`get_stop_hubs` identifies transit hubs by analyzing connections between stops, considering walking distances, operating hours, and service patterns.
}
\details{
The function follows these steps:
\enumerate{
  \item Groups stops into hubs based on proximity (using `walk_distance`) and spatial buffers.
  \item Filters trips and stops based on the specified `hour` and service patterns.
  \item Calculates the number of unique routes and trips associated with each hub.
}
}
\note{
- Ensure the `gtfs` object contains `stop_times`, `trips`, and `stops` tables.

- If `hour` is missing or invalid, an error will be raised.
}
\examples{
# Identify hubs for a GTFS object during peak hours (7 AM)
hubs <- get_stop_hubs(for_bus_gtfs, walk_distance = 150, hour = 7)

# Analyze hubs for all hours and default service patterns
hubs <- get_stop_hubs(for_bus_gtfs, walk_distance = 200, hour = "all")

}
\seealso{
[GTFSwizard::as_wizardgtfs()], [GTFSwizard::get_stops_sf()]
}
